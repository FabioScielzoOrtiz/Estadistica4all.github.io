[["index.html", "Introducción a SQL en Azure Data Studio Chapter 1 Introducción", " Introducción a SQL en Azure Data Studio Fabio Scielzo Ortiz 2023-03-11 Chapter 1 Introducción More articles: \\(\\hspace{0.1cm}\\) Estadistica4all Author: \\(\\hspace{0.1cm}\\) Fabio Scielzo Ortiz If you use this article, please cite it: \\(\\hspace{0.5cm}\\) Scielzo Ortiz, F. (2023). Introducción a Pandas. Estadistica4all. It is recommended to open the article on a computer or tablet. Este artículo es una introducción a SQL en Azure Data Studio. "],["instalación-de-azure-data-studio.html", "Chapter 2 Instalación de Azure Data Studio", " Chapter 2 Instalación de Azure Data Studio Primero hay que descargar Azure Data Studio. Ello puede hacerse fácilmente desde el siguiente link. También es necesario descargar SQL Server 2019 Developer Edition. Lo podemos hacer desde el siguiente link. Una vez que hemos instalado correctamente ambos programas, abrimos Azure Data Studio. Nos encontraremos una pantalla similar a la siguiente: Debemos establecer una conexión con un servidor para poder trabajar con bases de datos. En nuestro caso será un servidor alojado en local en nuestro propio ordinador. Para establecer la conexion debemos pinchar en la parte subrayada de amarillo. Tras pulsar ahí nos encontraremos con una pantalla similar a la siguiente: Debemos rellenar el campo Server con “localhost”, tal y como se muestra en la siguiente imagen: Posteriormente saldrá un mensaje como este. Le daos al boton azul (Enable Trust server certificate): Si se ha conectado correctamente al servidor en la pantalla debe aparecer algo similar a lo siguiente: Pinchando en New Query se abrirá un script de SQL donde podemos empezar a trabajar usando sentencias de SQL. "],["crear-una-nueva-base-de-datos-en-azure-data-studio.html", "Chapter 3 Crear una nueva base de datos en Azure Data Studio", " Chapter 3 Crear una nueva base de datos en Azure Data Studio Vamos a crear una nueva base de datos, a la que vamos a llamar Base_Datos_Fabio: El código empleado en la imagen para crear una nueva base de datos es el siguiente: -- Crear una nueva base de datos USE master GO IF NOT EXISTS ( SELECT name FROM sys.databases WHERE name = N&#39;Base_Datos_Fabio&#39; ) CREATE DATABASE [Base_Datos_Fabio]; GO IF SERVERPROPERTY(&#39;ProductVersion&#39;) &gt; &#39;12&#39; ALTER DATABASE [Base_Datos_Fabio] SET QUERY_STORE=ON; GO Tras la ejecución del codigo SQL anterior se deberia crear la base de datos, y ello deberia reflejarase en la parte izquierda del entorno, tal y como se muestra en la imagen: "],["crear-una-tabla.html", "Chapter 4 Crear una tabla 4.1 Clave primaria 4.2 Not Null y Null", " Chapter 4 Crear una tabla Ahora vamos a crear una nueva tabla dentro de la base de datos que acabamos de crear. Para ello se puede usar el mismo script de SQL pero modificando el elemento señalado en la parte superior de la pantalla. Este elemento permite fijar en que base de datos vamos a realizar los cambios. En este caso seleccionamos la base de datos Base_Datos_Fabio, que es la que hemos creado en el paso anterior. El codigo utilizado para crear la nueva tabla es el siguiente: -- Crear una nueva tabla dentro de la base de datos -- Create a new table called &#39;Clientes&#39; in schema &#39;dbo&#39; -- Drop the table if it already exists IF OBJECT_ID(&#39;dbo.Clientes&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Clientes; GO -- Create the table in the specified schema CREATE TABLE dbo.Clientes ( ClienteId nvarchar(50) NOT NULL PRIMARY KEY, -- primary key column --&gt; impide repeticiones de valores en esta columna Nombre char (50) NOT NULL, Pais nvarchar(50) NOT NULL, Ciudad nvarchar(50) NOT NULL, Email nvarchar (50) NOT NULL, Telefono nvarchar (50) NOT NULL ); GO Ejecutamos el codigo anterior y verificamos que se ha creado la tabla Clientes dentro de la base de datos Base_Datos_Fabio: A partir de ahora todas las operaciones que hagamos usando codigo SQL serán ejecutadas desde un script de SQL dentro del entorno Azure Data Studio, pero no se van a mostrar más capturas de pantalla sobre ello. Lo que haremos es mostrar el codigo que se debe ejecutar en cada ocasión y las salidas obtenidas tras su ejecución. Vamos a crear otras dos tablas más (proveedores y ventas) dentro de la base de datos Base_Datos_Fabio. El código empleado para crearlas es el siguiente: IF OBJECT_ID(&#39;dbo.Proveedores&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Proveedores; GO -- Create the table in the specified schema CREATE TABLE dbo.Proveedores ( ProveedorId nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Nombre nvarchar (50) NOT NULL, Email nvarchar(50) NOT NULL, Telefono nvarchar (50) NOT NULL ); GO IF OBJECT_ID(&#39;dbo.Ventas&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Ventas; GO -- Create the table in the specified schema CREATE TABLE dbo.Ventas ( VentasId nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Producto char (50) NOT NULL, Precio float (50) NOT NULL, Cliente nvarchar (50) NOT NULL, Proveedor nvarchar (50) NOT NULL ); GO 4.1 Clave primaria La sentencia PRIMARY KEY se asocia a las columnas que son identificadores únicos principales. Si la sentencia PRIMARY KEY está asociada a una columna, impide que haya valores repetidos en esa columna. Este tipo de columnas son fundamentales en las bases de datos puesto que permitirán unir tablas mediante diferentes operaciones que se verán más adelante. 4.2 Not Null y Null Si la sentencia NOT NULL está asociada a una columna, impide que esta columna tenga valores nulos. Si la sentencia NULL está asociada a una columna, permite que esta columna tenga valores nulos. "],["insertar-filas-en-una-tabla.html", "Chapter 5 Insertar filas en una tabla 5.1 Comprobación de la restricción PRIMARY KEY 5.2 Comprobación de la restricción NOT NULL", " Chapter 5 Insertar filas en una tabla INSERT INTO dbo.Clientes ([ClienteId], [Nombre], [Pais], [Ciudad], [Email], [Telefono]) VALUES ( &#39;C1&#39;, N&#39;Orlando&#39;, N&#39;Australia&#39;, N&#39;&#39;, N&#39;&#39; , N&#39;917755028&#39;), ( &#39;C2&#39;, N&#39;Keith&#39;, N&#39;India&#39;, N&#39;&#39;, N&#39;keith0@adventure-works.com&#39;, N&#39;&#39;), ( &#39;C3&#39;, N&#39;Donna&#39;, N&#39;Germany&#39;, N&#39;Berlin&#39;, N&#39;donna0@adventure-works.com&#39;, N&#39;915547890&#39;), ( &#39;C4&#39;, N&#39;Janet&#39;, N&#39;United States&#39;, N&#39;California&#39;, N&#39;janet1@adventure-works.com&#39;, N&#39;&#39;), ( &#39;C5&#39;, N&#39;Fabio&#39;, N&#39;España&#39;, N&#39;Madrid&#39;, N&#39;fabio10@gmail.com&#39;, N&#39;&#39;), ( &#39;C6&#39;, N&#39;Juan&#39;, N&#39;España&#39;, N&#39;Sevilla&#39;, N&#39;&#39; , N&#39;915869028&#39;), ( &#39;C7&#39;, N&#39;Lucia&#39;, N&#39;España&#39;, N&#39;&#39;, N&#39;LuciaPerez@hotmail.com&#39;, N&#39;&#39;), ( &#39;C8&#39;, N&#39;Pedro&#39;, N&#39;Italia&#39;, N&#39;Roma&#39;, N&#39;Pedro99@gmail.com&#39;, N&#39;910007890&#39;), ( &#39;C9&#39;, N&#39;Sergio&#39;, N&#39;United States&#39;, N&#39;New York&#39;, N&#39;sergio_as@gmail.com&#39;, N&#39;&#39;), ( &#39;C10&#39;, N&#39;Grecia&#39;, N&#39;Peru&#39;, N&#39;Lima&#39;, N&#39;Grecia89@gmail.com&#39;, N&#39;&#39;) GO ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio10@gmail.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com INSERT INTO dbo.Ventas ([VentasId], [Producto], [Precio], [Cliente], [Proveedor]) VALUES ( &#39;V1&#39;, N&#39;Alfombra&#39;, N&#39;1500&#39;, N&#39;C1&#39; , N&#39;P1&#39;), ( &#39;V2&#39;, N&#39;Killim&#39;, N&#39;699.50&#39;, N&#39;C3&#39;, N&#39;P1&#39;), ( &#39;V3&#39;, N&#39;Killim&#39;, N&#39;475&#39;, N&#39;C9&#39;, N&#39;P3&#39;), ( &#39;V4&#39;, N&#39;Alfombra&#39;, N&#39;5000&#39;, N&#39;C4&#39; , N&#39;P1&#39;), ( &#39;V5&#39;, N&#39;Killim&#39;, N&#39;499.50&#39;, N&#39;C8&#39;, N&#39;P1&#39;), ( &#39;V6&#39;, N&#39;Killim&#39;, N&#39;555&#39;, N&#39;C5&#39;, N&#39;P3&#39;), ( &#39;V7&#39;, N&#39;Alfombra&#39;, N&#39;2500&#39;, N&#39;C2&#39; , N&#39;P1&#39;), ( &#39;V8&#39;, N&#39;Killim&#39;, N&#39;299.50&#39;, N&#39;C10&#39;, N&#39;P1&#39;), ( &#39;V9&#39;, N&#39;Killim&#39;, N&#39;600&#39;, N&#39;C2&#39;, N&#39;P3&#39;), ( &#39;V10&#39;, N&#39;Alfombra&#39;, N&#39;1200&#39;, N&#39;C7&#39; , N&#39;P1&#39;), ( &#39;V11&#39;, N&#39;Killim&#39;, N&#39;500&#39;, N&#39;C8&#39;, N&#39;P1&#39;), ( &#39;V12&#39;, N&#39;Killim&#39;, N&#39;650&#39;, N&#39;C9&#39;, N&#39;P3&#39;), ( &#39;V13&#39;, N&#39;Alfombra&#39;, N&#39;3500&#39;, N&#39;C7&#39; , N&#39;P1&#39;), ( &#39;V14&#39;, N&#39;Killim&#39;, N&#39;1000&#39;, N&#39;C6&#39;, N&#39;P1&#39;), ( &#39;V15&#39;, N&#39;Killim&#39;, N&#39;350&#39;, N&#39;C10&#39;, N&#39;P3&#39;) GO VentasId Producto Precio Cliente Proveedor V1 Alfombra 1500 C1 P1 V10 Alfombra 1200 C7 P1 V11 Killim 500 C8 P1 V12 Killim 650 C9 P3 V13 Alfombra 3500 C7 P1 V14 Killim 1000 C6 P1 V15 Killim 350 C10 P3 V2 Killim 699,5 C3 P1 V3 Killim 475 C9 P3 V4 Alfombra 5000 C4 P1 V5 Killim 499,5 C8 P1 V6 Killim 555 C5 P3 V7 Alfombra 2500 C2 P1 V8 Killim 299,5 C10 P1 V9 Killim 600 C2 P3 -- Insert rows into table &#39;Proveedores&#39; INSERT INTO dbo.Proveedores ([ProveedorId], [Nombre], [Email], [Telefono]) VALUES ( &#39;P1&#39;, N&#39;Intertrade&#39;, N&#39;Intertrade@gmail.com&#39;, N&#39;912223344&#39;), ( &#39;P2&#39;, N&#39;SaidKarpet&#39;, N&#39;SaidKarpet@gmail.com&#39;, N&#39;912783794&#39;), ( &#39;P3&#39;, N&#39;OrientKillim&#39;, N&#39;OrientKillim@gmail.com&#39;, N&#39;9100155475&#39;) GO ProveedorId Nombre Email Telefono P1 Intertrade Intertrade@gmail.com 912223344 P2 SaidKarpet SaidKarpet@gmail.com 912783794 P3 OrientKillim OrientKillim@gmail.com 9100155475 5.1 Comprobación de la restricción PRIMARY KEY INSERT INTO dbo.Proveedores ([ProveedorId], [Nombre], [Email], [Telefono]) VALUES ( &#39;P3&#39; , &#39;AlfombrasSA&#39;, N&#39;AlfombrasSA@gmail.com&#39;, N&#39;91235344&#39;) GO Infracción de la restricción PRIMARY KEY &#39;PK__Proveedo__61266A5981C729E1&#39;. No se puede insertar una clave duplicada en el objeto &#39;dbo.Proveedores&#39;. El valor de la clave duplicada es (P3). 5.2 Comprobación de la restricción NOT NULL INSERT INTO dbo.Proveedores ([ProveedorId], [Nombre], [Email], [Telefono]) VALUES ( &#39;P4&#39; , NULL, N&#39;AlfombrasSA@gmail.com&#39;, N&#39;91235344&#39;) GO No se puede insertar el valor NULL en la columna &#39;Nombre&#39;, tabla &#39;Base_Datos_Fabio.dbo.Proveedores&#39;. La columna no admite valores NULL. Error de INSERT. "],["importar-un-csv-como-una-tabla.html", "Chapter 6 Importar un CSV como una tabla", " Chapter 6 Importar un CSV como una tabla Primero debemos instalar la extensión SQL Server Import en Azure Data Studio. A continuación importamos un CSV siguiendo los siguientes pasos: "],["vista-completa-de-una-tabla.html", "Chapter 7 Vista completa de una tabla", " Chapter 7 Vista completa de una tabla SELECT * FROM dbo.Clientes; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio10@gmail.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com "],["seleccionar-columnas-de-una-tabla.html", "Chapter 8 Seleccionar columnas de una tabla", " Chapter 8 Seleccionar columnas de una tabla SELECT Nombre, Pais, Ciudad FROM dbo.Clientes; Nombre Pais Ciudad Orlando Australia Grecia Peru Lima Keith India Donna Germany Berlin Janet United States California Fabio España Madrid Juan España Sevilla Lucia España Pedro Italia Roma Sergio United States New York "],["asignar-un-alias-a-una-columna.html", "Chapter 9 Asignar un alias a una columna", " Chapter 9 Asignar un alias a una columna SELECT Nombre AS NewName FROM dbo.Clientes; NewName Orlando Grecia Keith Donna Janet Fabio Juan Lucia Pedro Sergio "],["filtrar-filas-de-una-tabla.html", "Chapter 10 Filtrar filas de una tabla", " Chapter 10 Filtrar filas de una tabla SELECT * FROM dbo.Clientes WHERE Nombre = &#39;Fabio&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C5 Fabio España Madrid fabio10@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre != &#39;Fabio&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com SELECT * FROM dbo.Ventas WHERE Precio &lt; 500 ; VentasId Producto Precio Cliente Proveedor V15 Killim 350 C10 P3 V3 Killim 475 C9 P3 V5 Killim 499,5 C8 P1 V8 Killim 299,5 C10 P1 SELECT * FROM dbo.Ventas WHERE Precio &lt; 2000 AND Precio &gt; 500 ; VentasId Producto Precio Cliente Proveedor V1 Alfombra 1500 C1 P1 V10 Alfombra 1200 C7 P1 V12 Killim 650 C9 P3 V14 Killim 1000 C6 P1 V2 Killim 699,5 C3 P1 V6 Killim 555 C5 P3 V9 Killim 600 C2 P3 SELECT * FROM dbo.Ventas WHERE Precio &lt;= 2000 OR Precio &gt; 500 ; VentasId Producto Precio Cliente Proveedor V1 Alfombra 1500 C1 P1 V10 Alfombra 1200 C7 P1 V11 Killim 500 C8 P1 V12 Killim 650 C9 P3 V13 Alfombra 3500 C7 P1 V14 Killim 1000 C6 P1 V15 Killim 350 C10 P3 V2 Killim 699,5 C3 P1 V3 Killim 475 C9 P3 V4 Alfombra 5000 C4 P1 V5 Killim 499,5 C8 P1 V6 Killim 555 C5 P3 V7 Alfombra 2500 C2 P1 V8 Killim 299,5 C10 P1 V9 Killim 600 C2 P3 SELECT Nombre , Email FROM dbo.Proveedores WHERE Email = &#39;Intertrade@gmail.com&#39; ; Nombre Email Intertrade Intertrade@gmail.com SELECT Producto , Cliente, Proveedor FROM dbo.Ventas WHERE Precio &lt; 2000 AND Precio &gt; 500 ; Producto Cliente Proveedor Alfombra C1 P1 Alfombra C7 P1 Killim C9 P3 Killim C6 P1 Killim C3 P1 Killim C5 P3 Killim C2 P3 SELECT*FROM Clientes WHERE Nombre is NOT NULL ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre in ( &#39;Orlando&#39; , &#39;Fabio&#39;) ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C5 Fabio España Madrid fabio10@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre not in ( &#39;Orlando&#39; , &#39;Fabio&#39;) ; ClienteId Nombre Pais Ciudad Email Telefono C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com "],["eliminar-filas-de-una-tabla.html", "Chapter 11 Eliminar filas de una tabla", " Chapter 11 Eliminar filas de una tabla DELETE from Ventas VentasId Producto Precio Cliente Proveedor Delete from Clientes WHERE Nombre = &#39;Fabio&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com "],["eliminar-una-tabla.html", "Chapter 12 Eliminar una tabla", " Chapter 12 Eliminar una tabla DROP TABLE Clientes "],["actualizar-columnas-de-una-table.html", "Chapter 13 Actualizar columnas de una table 13.1 Fijar un valor por defecto para una columna", " Chapter 13 Actualizar columnas de una table Primero volvemos a cargar las tablas Ventas y Clientes para recuperar su estado original, puesto que hemos eliminado todas las filas de Ventas y una de Clientes. Una vez hecho lo anterior, continuamos. UPDATE Clientes set Nombre = &#39;Messi&#39; WHERE ClienteId = &#39;C1&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Messi Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio10@gmail.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com UPDATE Clientes set Nombre = &#39;Messi&#39; , Pais = &#39;Argentina&#39; WHERE ClienteId = &#39;C1&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Messi Argentina 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio10@gmail.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com UPDATE Clientes set Nombre = &#39;Messi&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Messi Argentina 917755028 C10 Messi Peru Lima Grecia89@gmail.com C2 Messi India keith0@adventure-works.com C3 Messi Germany Berlin donna0@adventure-works.com 915547890 C4 Messi United States California janet1@adventure-works.com C5 Messi España Madrid fabio10@gmail.com C6 Messi España Sevilla 915869028 C7 Messi España LuciaPerez@hotmail.com C8 Messi Italia Roma Pedro99@gmail.com 910007890 C9 Messi United States New York sergio_as@gmail.com 13.1 Fijar un valor por defecto para una columna IF OBJECT_ID(&#39;dbo.Otra_Tabla_1&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Otra_Tabla_1; GO -- Create the table in the specified schema CREATE TABLE dbo.Otra_Tabla_1 ( Id nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Nombre nvarchar (50) NOT NULL, Email nvarchar(50) NOT NULL DEFAULT &#39;no tiene&#39;, Telefono nvarchar (50) NOT NULL DEFAULT &#39;desconocido&#39; ); GO INSERT INTO dbo.Otra_Tabla_1 ([Id], [Nombre], [Email], [Telefono]) VALUES ( 1 , &#39;Juan&#39;, DEFAULT , DEFAULT), ( 2 , &#39;Rodrigo&#39;, DEFAULT , &#39;915568799&#39;), ( 3 , &#39;Sofia&#39;, DEFAULT , DEFAULT), ( 4 , &#39;Irene&#39;, &#39;Irene99@hotmail.es&#39; , &#39;914478236&#39;), ( 5 , &#39;Luis&#39;, &#39;LuisMP@gmail.com&#39; , DEFAULT) GO Id Nombre Email Telefono 1 Juan no tiene desconocido 2 Rodrigo no tiene 915568799 3 Sofia no tiene desconocido 4 Irene Irene99@hotmail.es 914478236 5 Luis LuisMP@gmail.com desconocido "],["columnas-calculadas-a-partir-de-otras.html", "Chapter 14 Columnas calculadas a partir de otras", " Chapter 14 Columnas calculadas a partir de otras IF OBJECT_ID(&#39;dbo.Otra_Tabla_Ventas&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Otra_Tabla_Ventas; GO -- Create the table in the specified schema CREATE TABLE dbo.Otra_Tabla_Ventas ( VentasId nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Producto char (50) NOT NULL, Precio float (50) NOT NULL, Descuento float (50) NOT NULL, Cliente nvarchar (50) NOT NULL, Proveedor nvarchar (50) NOT NULL ); GO -- Insert rows INSERT INTO dbo.Otra_Tabla_Ventas ([VentasId], [Producto], [Precio], [Descuento], [Cliente], [Proveedor]) VALUES ( &#39;V1&#39;, &#39;Alfombra&#39;, 1500, 0.5 ,&#39;C2&#39; , &#39;P1&#39;), ( &#39;V2&#39;, &#39;Killim&#39;, 699.50, 0.25, &#39;C3&#39;, &#39;P1&#39;), ( &#39;V3&#39;, &#39;Killim&#39;, 475, 0.10, &#39;C2&#39;, &#39;P3&#39;), ( &#39;V4&#39;, &#39;Alfombra&#39;, 1500, 0.5 ,&#39;C7&#39; , &#39;P1&#39;), ( &#39;V5&#39;, &#39;Alfombra&#39;, 5000, 0.30, &#39;C5&#39;, &#39;P1&#39;), ( &#39;V6&#39;, &#39;Killim&#39;, 250, 0.10, &#39;C9&#39;, &#39;P3&#39;) GO VentasId Producto Precio Descuento Cliente Proveedor V1 Alfombra 1500 0,5 C2 P1 V2 Killim 699,5 0,25 C3 P1 V3 Killim 475 0,1 C2 P3 V4 Alfombra 1500 0,5 C7 P1 V5 Alfombra 5000 0,3 C5 P1 V6 Killim 250 0,1 C9 P3 475 0,1 C2 P3 SELECT VentasId, Producto, Precio, Descuento, &#39;Precio_Final&#39; = Precio - Precio*Descuento, Cliente, Proveedor FROM Otra_Tabla_Ventas VentasId Producto Precio Descuento Precio_Final Cliente Proveedor V1 Alfombra 1500 0,5 750 C2 P1 V2 Killim 699,5 0,25 524,625 C3 P1 V3 Killim 475 0,1 427,5 C2 P3 V4 Alfombra 1500 0,5 750 C7 P1 V5 Alfombra 5000 0,3 3500 C5 P1 V6 Killim 250 0,1 225 C9 P3 "],["concatenar-strings-de-filas-distintas.html", "Chapter 15 Concatenar strings de filas distintas", " Chapter 15 Concatenar strings de filas distintas Primero volvemos a cargar la tabla clientes tal y como la teniamos en un inicio: IF OBJECT_ID(&#39;dbo.Clientes&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Clientes; GO -- Create the table in the specified schema CREATE TABLE dbo.Clientes ( ClienteId nvarchar(50) NOT NULL PRIMARY KEY, -- primary key column --&gt; impide repeticiones de valores en esta columna Nombre char (50) NOT NULL, Pais nvarchar(50) NOT NULL, Ciudad nvarchar(50) NOT NULL, Email nvarchar (50) NOT NULL, Telefono nvarchar (50) NOT NULL ); GO INSERT INTO dbo.Clientes ([ClienteId], [Nombre], [Pais], [Ciudad], [Email], [Telefono]) VALUES ( &#39;C1&#39;, N&#39;Orlando&#39;, N&#39;Australia&#39;, N&#39;&#39;, N&#39;&#39; , N&#39;917755028&#39;), ( &#39;C2&#39;, N&#39;Keith&#39;, N&#39;India&#39;, N&#39;&#39;, N&#39;keith0@adventure-works.com&#39;, N&#39;&#39;), ( &#39;C3&#39;, N&#39;Donna&#39;, N&#39;Germany&#39;, N&#39;Berlin&#39;, N&#39;donna0@adventure-works.com&#39;, N&#39;915547890&#39;), ( &#39;C4&#39;, N&#39;Janet&#39;, N&#39;United States&#39;, N&#39;California&#39;, N&#39;janet1@adventure-works.com&#39;, N&#39;&#39;), ( &#39;C5&#39;, N&#39;Fabio&#39;, N&#39;España&#39;, N&#39;Madrid&#39;, N&#39;fabio10@gmail.com&#39;, N&#39;&#39;), ( &#39;C6&#39;, N&#39;Juan&#39;, N&#39;España&#39;, N&#39;Sevilla&#39;, N&#39;&#39; , N&#39;915869028&#39;), ( &#39;C7&#39;, N&#39;Lucia&#39;, N&#39;España&#39;, N&#39;&#39;, N&#39;LuciaPerez@hotmail.com&#39;, N&#39;&#39;), ( &#39;C8&#39;, N&#39;Pedro&#39;, N&#39;Italia&#39;, N&#39;Roma&#39;, N&#39;Pedro99@gmail.com&#39;, N&#39;910007890&#39;), ( &#39;C9&#39;, N&#39;Sergio&#39;, N&#39;United States&#39;, N&#39;New York&#39;, N&#39;sergio_as@gmail.com&#39;, N&#39;&#39;), ( &#39;C10&#39;, N&#39;Grecia&#39;, N&#39;Peru&#39;, N&#39;Lima&#39;, N&#39;Grecia89@gmail.com&#39;, N&#39;&#39;) GO SELECT Nombre, &#39;nueva_columna&#39; = Pais + &#39; - &#39; + Ciudad FROM Clientes Nombre nueva_columna Orlando Australia - Grecia Peru - Lima Keith India - Donna Germany - Berlin Janet United States - California Fabio España - Madrid Juan España - Sevilla Lucia España - Pedro Italia - Roma Sergio United States - New York "],["ordenar-tabla-por-columnas.html", "Chapter 16 Ordenar tabla por columnas", " Chapter 16 Ordenar tabla por columnas SELECT*FROM Ventas ORDER BY Precio ASC VentasId Producto Precio Descuento Cliente Proveedor V3 Killim 475 0,1 C2 P3 V2 Killim 699,5 0,25 C3 P1 V1 Alfombra 1500 0,5 C2 P1 SELECT*FROM Ventas ORDER BY Precio DESC VentasId Producto Precio Descuento Cliente Proveedor V1 Alfombra 1500 0,5 C2 P1 V2 Killim 699,5 0,25 C3 P1 V3 Killim 475 0,1 C2 P3 "],["seleccionar-filas-por-strings-con-like-y-not-like.html", "Chapter 17 Seleccionar filas por strings con Like y Not Like", " Chapter 17 Seleccionar filas por strings con Like y Not Like SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%lan%&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%i%&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C2 Keith India keith0@adventure-works.com C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre not like &#39;%i%&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;o%&#39; ; -- empieza por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%o&#39; ; -- acaba por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%lan%o&#39; ; -- contiene &#39;lan&#39; y acaba por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%b%o&#39; ; -- contiene &#39;b&#39; y acaba por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%F____&#39; ; -- empieza por &#39;F&#39; seguida de 4 caracteres ClienteId Nombre Pais Ciudad Email Telefono C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%F__&#39; ; -- empieza por &#39;F&#39; seguida de 2 caracteres ClienteId Nombre Pais Ciudad Email Telefono "],["count.html", "Chapter 18 Count", " Chapter 18 Count SELECT COUNT(*) FROM Clientes ; (No column name) 5 SELECT COUNT(Nombre) FROM Clientes ; (No column name) 5 "],["min-max-sum-avg.html", "Chapter 19 Min, Max, Sum, Avg", " Chapter 19 Min, Max, Sum, Avg SELECT Min(Precio) FROM Ventas ; (No column name) 475 SELECT Max(Precio) FROM Ventas ; (No column name) 1500 SELECT Sum(Precio) FROM Ventas ; (No column name) 2674,5 SELECT Avg(Precio) FROM Ventas ; (No column name) 891,5 "],["group-by.html", "Chapter 20 Group by", " Chapter 20 Group by "],["having.html", "Chapter 21 Having", " Chapter 21 Having "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
