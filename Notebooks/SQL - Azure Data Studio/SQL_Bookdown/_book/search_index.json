[["index.html", "Introducción a SQL en Azure Data Studio Chapter 1 Introducción", " Introducción a SQL en Azure Data Studio Fabio Scielzo Ortiz 2023-03-12 Chapter 1 Introducción More articles: \\(\\hspace{0.1cm}\\) Estadistica4all Author: \\(\\hspace{0.1cm}\\) Fabio Scielzo Ortiz If you use this article, please cite it: \\(\\hspace{0.5cm}\\) Scielzo Ortiz, F. (2023). Introducción a Pandas. Estadistica4all. It is recommended to open the article on a computer or tablet. Este artículo es una introducción a SQL en Azure Data Studio. "],["instalación-de-azure-data-studio.html", "Chapter 2 Instalación de Azure Data Studio", " Chapter 2 Instalación de Azure Data Studio First, we need to download Azure Data Studio. It can be done easily from the following link You also need to download SQL Server 2019 Developer Edition. We can do that from the following link. Once we have successfully installed both programs, we open Azure Data Studio. We will find a screen similar to the following: We must establish a connection with the server, to be able to work with databases. In our case it will be a server hosted on our local computer. To establish the connection we must click on the yellow part. After clicking on it, we will find a screen similar to the following: We must fill the Server field with “localhost”, as shown in the following image: Then a message like this will be displayed. We click on the blue button (Enable trusted server certificate): If the server has connected successfully, the screen will show something like this: Clicking on New Query, It will open an SQL script where we can start working with SQL. "],["create-a-database.html", "Chapter 3 Create a database", " Chapter 3 Create a database We are going to create a new database, which will be called Fabio_Database: The code used to create the new database is the following: USE master GO IF NOT EXISTS ( SELECT name FROM sys.databases WHERE name = N&#39;Base_Datos_Fabio&#39; ) CREATE DATABASE [Base_Datos_Fabio]; GO IF SERVERPROPERTY(&#39;ProductVersion&#39;) &gt; &#39;12&#39; ALTER DATABASE [Base_Datos_Fabio] SET QUERY_STORE=ON; GO After the execution of the above SQL code, the database should be created, and it should appear on the left side of the environment, as shown in the following image: "],["delete-a-database.html", "Chapter 4 Delete a database", " Chapter 4 Delete a database We can delete a database as follows: -- Drop the database &#39;Base_Datos_Fabio&#39; -- Connect to the &#39;master&#39; database to run this snippet USE master GO -- Uncomment the ALTER DATABASE statement below to set the database to SINGLE_USER mode if the drop database command fails because the database is in use. ALTER DATABASE Base_Datos_Fabio SET SINGLE_USER WITH ROLLBACK IMMEDIATE; -- Drop the database if it exists IF EXISTS ( SELECT [name] FROM sys.databases WHERE [name] = N&#39;Base_Datos_Fabio&#39; ) DROP DATABASE Base_Datos_Fabio GO "],["create-a-table.html", "Chapter 5 Create a table 5.1 Primary Key 5.2 Not Null and Null", " Chapter 5 Create a table Now we are going to create a new table inside the database that we have just defined. To do this, the same SQL script can be used but modifying the element indicated at the top of the screen. This element allows us to set the database in which we are going to make the changes. In this case we select the database Base_Datos_Fabio, which is the one we created in the previous step. The code used to create the new table is the following: -- Create a new table called &#39;Alumnos&#39; in schema &#39;dbo&#39; -- Drop the table if it already exists IF OBJECT_ID(&#39;dbo.Alumnos&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Alumnos; GO -- Create the table in the specified schema CREATE TABLE dbo.Alumnos ( ClienteId nvarchar(50) NOT NULL PRIMARY KEY, Nombre char (50) NOT NULL, Pais nvarchar(50) NOT NULL, Ciudad nvarchar(50) NOT NULL, Email nvarchar (50) NOT NULL, Telefono nvarchar (50) NOT NULL ); GO We execute the last code and check if the table Alumnos has been created inside Database_Fabio: From now on, all the operations we do with SQL code will be executed from a SQL script within the Azure Data Studio environment, but no more screenshots will be shown about it. What we will do is show the code that must be executed each time and the outputs that are obtained after its execution. We are going to create two more tables (Profesores and Examenes) inside the database Base_Datos_Fabio. The code used to create them is as follows: IF OBJECT_ID(&#39;dbo.Profesores&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Profesores; GO -- Create the table in the specified schema CREATE TABLE dbo.Profesores ( ProfesorId nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Nombre nvarchar (50) NOT NULL, Estudios nvarchar(50) NOT NULL, Email nvarchar(50) NOT NULL, ); GO IF OBJECT_ID(&#39;dbo.Examenes&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Examenes; GO -- Create the table in the specified schema CREATE TABLE dbo.Examenes ( ExamenId nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Nota DECIMAL(5,2) NOT NULL, Asignatura nvarchar (50) NOT NULL, AlumnoID nvarchar (50) NOT NULL, ProfesorID nvarchar (50) NOT NULL ); GO 5.1 Primary Key The PRIMARY KEY statement is associated with columns that are unique identifiers. If the PRIMARY KEY statement is attached to a column, it prevents repeating values in that column. These types of columns are essential in databases since they will allow joining tables through different operations that will be seen later. 5.2 Not Null and Null If the NOT NULL statement is associated with a column, it prevents this column from having null values. If the NULL statement is associated with a column, it allows this column to have null values. "],["insert-rows-into-a-table.html", "Chapter 6 Insert rows into a table 6.1 Cheking Primary Key restriction 6.2 Checking Not Null restriction", " Chapter 6 Insert rows into a table Inserting rows into Alumnos table: INSERT INTO dbo.Alumnos ([AlumnoID], [Nombre], [Pais], [Ciudad], [Email], [Telefono]) VALUES ( &#39;A1&#39;, N&#39;Orlando&#39;, N&#39;Australia&#39;, N&#39;&#39;, N&#39;&#39; , N&#39;917755028&#39;), ( &#39;A2&#39;, N&#39;Keith&#39;, N&#39;India&#39;, N&#39;&#39;, N&#39;keith0@adventure-works.com&#39;, N&#39;&#39;), ( &#39;A3&#39;, N&#39;Donna&#39;, N&#39;Germany&#39;, N&#39;Berlin&#39;, N&#39;donna0@adventure-works.com&#39;, N&#39;915547890&#39;), ( &#39;A4&#39;, N&#39;Janet&#39;, N&#39;United States&#39;, N&#39;California&#39;, N&#39;janet1@adventure-works.com&#39;, N&#39;&#39;), ( &#39;A5&#39;, N&#39;Fabio&#39;, N&#39;España&#39;, N&#39;Madrid&#39;, N&#39;fabio10@gmail.com&#39;, N&#39;&#39;), ( &#39;A6&#39;, N&#39;Juan&#39;, N&#39;España&#39;, N&#39;Sevilla&#39;, N&#39;&#39; , N&#39;915869028&#39;), ( &#39;A7&#39;, N&#39;Lucia&#39;, N&#39;España&#39;, N&#39;&#39;, N&#39;LuciaPerez@hotmail.com&#39;, N&#39;&#39;), ( &#39;A8&#39;, N&#39;Pedro&#39;, N&#39;Italia&#39;, N&#39;Roma&#39;, N&#39;Pedro99@gmail.com&#39;, N&#39;910007890&#39;), ( &#39;A9&#39;, N&#39;Sergio&#39;, N&#39;United States&#39;, N&#39;New York&#39;, N&#39;sergio_as@gmail.com&#39;, N&#39;&#39;), ( &#39;A10&#39;, N&#39;Grecia&#39;, N&#39;Peru&#39;, N&#39;Lima&#39;, N&#39;Grecia89@gmail.com&#39;, N&#39;&#39;), ( &#39;A11&#39;, N&#39;Ismael&#39;, N&#39;España&#39;, N&#39;Madrid&#39;, N&#39;Isma98@gmail.com&#39;, N&#39;912234543&#39;), ( &#39;A12&#39;, N&#39;Luis&#39;, N&#39;España&#39;, N&#39;Murcia&#39;, N&#39;Luismiguel123@gmail.com&#39;, N&#39;&#39;), ( &#39;A13&#39;, N&#39;Pedro&#39;, N&#39;Argentina&#39;, N&#39;Buenos Aires&#39;, N&#39;Pedro120@gmail.com&#39;, N&#39;&#39;) GO AlumnoID Nombre Pais Ciudad Email Telefono A1 Orlando Australia 917755028 A10 Grecia Peru Lima Grecia89@gmail.com A11 Ismael España Madrid Isma98@gmail.com 912234543 A12 Luis España Murcia Luismiguel123@gmail.com A13 Pedro Argentina Buenos Aires Pedro120@gmail.com A2 Keith India keith0@adventure-works.com A3 Donna Germany Berlin donna0@adventure-works.com 915547890 A4 Janet United States California janet1@adventure-works.com A5 Fabio España Madrid fabio10@gmail.com A6 Juan España Sevilla 915869028 A7 Lucia España LuciaPerez@hotmail.com A8 Pedro Italia Roma Pedro99@gmail.com 910007890 A9 Sergio United States New York sergio_as@gmail.com Inserting rows into Profesores table: INSERT INTO dbo.Profesores ([ProfesorID], [Nombre], [Estudios], [Email]) VALUES ( &#39;P1&#39;, N&#39;Juan&#39;, N&#39;Matemáticas&#39;, N&#39;JuanPerez@colegio.es&#39;), ( &#39;P2&#39;, N&#39;Sonia&#39;, N&#39;Física&#39;, N&#39;SoniDiaz@colegio.es&#39;), ( &#39;P3&#39;, N&#39;Lucia&#39;, N&#39;Lengua&#39;, N&#39;LuciaPerez@colegio.es&#39;), ( &#39;P4&#39;, N&#39;Marcos&#39;, N&#39;Biología&#39;, N&#39;MarcosSanz@colegio.es&#39;), ( &#39;P5&#39;, N&#39;Carlos&#39;, N&#39;Educación Física&#39;, N&#39;CarlosFernandez@colegio.es&#39;), ( &#39;P6&#39;, N&#39;Daniel&#39;, N&#39;Geografía&#39;, N&#39;DanielOrtiz@colegio.es&#39;), ( &#39;P7&#39;, N&#39;Garazi&#39;, N&#39;Inglés&#39;, N&#39;GaraziGarcia@colegio.es&#39;) GO ProfesorID Nombre Estudios Email P1 Juan Matemáticas JuanPerez@colegio.es P2 Sonia Física SoniDiaz@colegio.es P3 Lucia Lengua LuciaPerez@colegio.es P4 Marcos Biología MarcosSanz@colegio.es P5 Carlos Educación Física CarlosFernandez@colegio.es P6 Daniel Geografía DanielOrtiz@colegio.es P7 Garazi Inglés GaraziGarcia@colegio.es Inserting rows into Examenes table: INSERT INTO dbo.Examenes ([ExamenID], [Nota], [Asignatura], [AlumnoID], [ProfesorID]) VALUES ( &#39;E1&#39;, 6.7, N&#39;Matemáticas&#39;, N&#39;A2&#39;, N&#39;P1&#39;), ( &#39;E2&#39;, 8, N&#39;Física&#39;, N&#39;A4&#39;, N&#39;P2&#39;), ( &#39;E3&#39;, 4.25, N&#39;Matemáticas&#39;, N&#39;A1&#39;, N&#39;P1&#39;), ( &#39;E4&#39;, 6.5, N&#39;Matemáticas&#39;, N&#39;A7&#39;, N&#39;P7&#39;), ( &#39;E5&#39;, 7, N&#39;Matemáticas&#39;, N&#39;A9&#39;, N&#39;P3&#39;) GO ExamenID Nota Asignatura AlumnoID ProfesorID E1 6.70 Matemáticas A2 P1 E2 8.00 Física A4 P2 E3 4.25 Matemáticas A1 P1 E4 6.50 Matemáticas A7 P7 E5 7.00 Matemáticas A9 P3 6.1 Cheking Primary Key restriction INSERT INTO dbo.Profesores ([ProfesorID], [Nombre], [Estudios], [Email]) VALUES ( &#39;P1&#39; , N&#39;Juan&#39;, N&#39;Filosofía&#39;, N&#39;JuanDiaz@colegio.es&#39;) GO Infracción de la restricción PRIMARY KEY &#39;PK__Profesor__4DF3F028228525F7&#39;. No se puede insertar una clave duplicada en el objeto &#39;dbo.Profesores&#39;. El valor de la clave duplicada es (P1). 6.2 Checking Not Null restriction INSERT INTO dbo.Profesores ([ProfesorID], [Nombre], [Estudios], [Email]) VALUES ( &#39;P8&#39; , NULL, N&#39;Filosofía&#39;, N&#39;JuanDiaz@colegio.es&#39;) GO No se puede insertar el valor NULL en la columna &#39;Nombre&#39;, tabla &#39;Base_Datos_Fabio.dbo.Profesores&#39;. La columna no admite valores NULL. Error de INSERT. "],["import-a-csv-as-table.html", "Chapter 7 Import a CSV as table", " Chapter 7 Import a CSV as table First of all, we must intall the SQL Server Import Azure Data Studio extension. Next we import a CSV following the following steps: "],["full-view-of-a-table.html", "Chapter 8 Full view of a table", " Chapter 8 Full view of a table SELECT * FROM dbo.Clientes; neighborhood_recode latitude longitude price no_of_bedrooms no_of_bathrooms quality_recode maid_room_recode unfurnished_recode balcony_recode barbecue_area_recode central_ac_recode childrens_play_area_recode childrens_pool_recode concierge_recode covered_parking_recode kitchen_appliances_recode maid_service_recode pets_allowed_recode private_garden_recode private_gym_recode private_jacuzzi_recode private_pool_recode security_recode shared_gym_recode shared_pool_recode shared_spa_recode view_of_water_recode size_in_m_2 460 25113208 55138932 2700000 1 2 20 0 0 10 10 10 10 0 10 0 10 0 10 0 0 0 0 0 10 0 0 10 100242337 460 25106809 55151201 2850000 2 2 20 0 0 10 0 10 10 0 0 0 0 0 0 0 0 0 0 0 10 10 0 10 146972546 360 25063302 55137728 1150000 3 5 20 10 10 10 0 0 0 0 0 10 0 0 0 0 0 10 0 10 10 10 0 10 181253753 110 25227295 55341761 2850000 2 3 10 0 10 10 0 0 0 0 10 10 0 0 10 0 0 0 0 0 0 0 0 0 18766406 460 25114275 55139764 1729200 0 1 20 0 0 0 0 10 0 0 0 10 10 0 0 0 0 0 0 10 10 10 10 10 47101821 460 25114275 55139764 3119900 1 2 20 0 0 0 0 10 0 0 0 10 10 0 0 0 0 0 0 10 10 10 10 10 94296545 460 25114275 55139764 8503600 2 3 0 10 0 0 0 10 0 0 0 10 10 0 0 0 0 0 0 10 10 10 10 10 191565986 … … … … … … … … … … … … … … … … … … … … … … … … … … … … … "],["seleccionar-columnas-de-una-tabla.html", "Chapter 9 Seleccionar columnas de una tabla", " Chapter 9 Seleccionar columnas de una tabla SELECT Nombre, Pais, Ciudad FROM dbo.Clientes; Nombre Pais Ciudad Orlando Australia Grecia Peru Lima Keith India Donna Germany Berlin Janet United States California Fabio España Madrid Juan España Sevilla Lucia España Pedro Italia Roma Sergio United States New York "],["asignar-un-alias-a-una-columna.html", "Chapter 10 Asignar un alias a una columna", " Chapter 10 Asignar un alias a una columna SELECT Nombre AS NewName FROM dbo.Clientes; NewName Orlando Grecia Keith Donna Janet Fabio Juan Lucia Pedro Sergio "],["filtrar-filas-de-una-tabla.html", "Chapter 11 Filtrar filas de una tabla", " Chapter 11 Filtrar filas de una tabla SELECT * FROM dbo.Clientes WHERE Nombre = &#39;Fabio&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C5 Fabio España Madrid fabio10@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre != &#39;Fabio&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com SELECT * FROM dbo.Ventas WHERE Precio &lt; 500 ; VentasId Producto Precio Cliente Proveedor V15 Killim 350 C10 P3 V3 Killim 475 C9 P3 V5 Killim 499,5 C8 P1 V8 Killim 299,5 C10 P1 SELECT * FROM dbo.Ventas WHERE Precio &lt; 2000 AND Precio &gt; 500 ; VentasId Producto Precio Cliente Proveedor V1 Alfombra 1500 C1 P1 V10 Alfombra 1200 C7 P1 V12 Killim 650 C9 P3 V14 Killim 1000 C6 P1 V2 Killim 699,5 C3 P1 V6 Killim 555 C5 P3 V9 Killim 600 C2 P3 SELECT * FROM dbo.Ventas WHERE Precio &lt;= 2000 OR Precio &gt; 500 ; VentasId Producto Precio Cliente Proveedor V1 Alfombra 1500 C1 P1 V10 Alfombra 1200 C7 P1 V11 Killim 500 C8 P1 V12 Killim 650 C9 P3 V13 Alfombra 3500 C7 P1 V14 Killim 1000 C6 P1 V15 Killim 350 C10 P3 V2 Killim 699,5 C3 P1 V3 Killim 475 C9 P3 V4 Alfombra 5000 C4 P1 V5 Killim 499,5 C8 P1 V6 Killim 555 C5 P3 V7 Alfombra 2500 C2 P1 V8 Killim 299,5 C10 P1 V9 Killim 600 C2 P3 SELECT Nombre , Email FROM dbo.Proveedores WHERE Email = &#39;Intertrade@gmail.com&#39; ; Nombre Email Intertrade Intertrade@gmail.com SELECT Producto , Cliente, Proveedor FROM dbo.Ventas WHERE Precio &lt; 2000 AND Precio &gt; 500 ; Producto Cliente Proveedor Alfombra C1 P1 Alfombra C7 P1 Killim C9 P3 Killim C6 P1 Killim C3 P1 Killim C5 P3 Killim C2 P3 SELECT*FROM Clientes WHERE Nombre is NOT NULL ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre in ( &#39;Orlando&#39; , &#39;Fabio&#39;) ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C5 Fabio España Madrid fabio10@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre not in ( &#39;Orlando&#39; , &#39;Fabio&#39;) ; ClienteId Nombre Pais Ciudad Email Telefono C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com "],["eliminar-filas-de-una-tabla.html", "Chapter 12 Eliminar filas de una tabla", " Chapter 12 Eliminar filas de una tabla DELETE from Ventas VentasId Producto Precio Cliente Proveedor Delete from Clientes WHERE Nombre = &#39;Fabio&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com "],["eliminar-una-tabla.html", "Chapter 13 Eliminar una tabla", " Chapter 13 Eliminar una tabla DROP TABLE Clientes "],["actualizar-columnas-de-una-table.html", "Chapter 14 Actualizar columnas de una table 14.1 Fijar un valor por defecto para una columna", " Chapter 14 Actualizar columnas de una table Primero volvemos a cargar las tablas Ventas y Clientes para recuperar su estado original, puesto que hemos eliminado todas las filas de Ventas y una de Clientes. Una vez hecho lo anterior, continuamos. UPDATE Clientes set Nombre = &#39;Messi&#39; WHERE ClienteId = &#39;C1&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Messi Australia 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio10@gmail.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com UPDATE Clientes set Nombre = &#39;Messi&#39; , Pais = &#39;Argentina&#39; WHERE ClienteId = &#39;C1&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Messi Argentina 917755028 C10 Grecia Peru Lima Grecia89@gmail.com C2 Keith India keith0@adventure-works.com C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com C5 Fabio España Madrid fabio10@gmail.com C6 Juan España Sevilla 915869028 C7 Lucia España LuciaPerez@hotmail.com C8 Pedro Italia Roma Pedro99@gmail.com 910007890 C9 Sergio United States New York sergio_as@gmail.com UPDATE Clientes set Nombre = &#39;Messi&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Messi Argentina 917755028 C10 Messi Peru Lima Grecia89@gmail.com C2 Messi India keith0@adventure-works.com C3 Messi Germany Berlin donna0@adventure-works.com 915547890 C4 Messi United States California janet1@adventure-works.com C5 Messi España Madrid fabio10@gmail.com C6 Messi España Sevilla 915869028 C7 Messi España LuciaPerez@hotmail.com C8 Messi Italia Roma Pedro99@gmail.com 910007890 C9 Messi United States New York sergio_as@gmail.com 14.1 Fijar un valor por defecto para una columna IF OBJECT_ID(&#39;dbo.Otra_Tabla_1&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Otra_Tabla_1; GO -- Create the table in the specified schema CREATE TABLE dbo.Otra_Tabla_1 ( Id nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Nombre nvarchar (50) NOT NULL, Email nvarchar(50) NOT NULL DEFAULT &#39;no tiene&#39;, Telefono nvarchar (50) NOT NULL DEFAULT &#39;desconocido&#39; ); GO INSERT INTO dbo.Otra_Tabla_1 ([Id], [Nombre], [Email], [Telefono]) VALUES ( 1 , &#39;Juan&#39;, DEFAULT , DEFAULT), ( 2 , &#39;Rodrigo&#39;, DEFAULT , &#39;915568799&#39;), ( 3 , &#39;Sofia&#39;, DEFAULT , DEFAULT), ( 4 , &#39;Irene&#39;, &#39;Irene99@hotmail.es&#39; , &#39;914478236&#39;), ( 5 , &#39;Luis&#39;, &#39;LuisMP@gmail.com&#39; , DEFAULT) GO Id Nombre Email Telefono 1 Juan no tiene desconocido 2 Rodrigo no tiene 915568799 3 Sofia no tiene desconocido 4 Irene Irene99@hotmail.es 914478236 5 Luis LuisMP@gmail.com desconocido "],["columnas-calculadas-a-partir-de-otras.html", "Chapter 15 Columnas calculadas a partir de otras", " Chapter 15 Columnas calculadas a partir de otras IF OBJECT_ID(&#39;dbo.Otra_Tabla_Ventas&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Otra_Tabla_Ventas; GO -- Create the table in the specified schema CREATE TABLE dbo.Otra_Tabla_Ventas ( VentasId nvarchar (50) NOT NULL PRIMARY KEY, -- primary key column Producto char (50) NOT NULL, Precio float (50) NOT NULL, Descuento float (50) NOT NULL, Cliente nvarchar (50) NOT NULL, Proveedor nvarchar (50) NOT NULL ); GO -- Insert rows INSERT INTO dbo.Otra_Tabla_Ventas ([VentasId], [Producto], [Precio], [Descuento], [Cliente], [Proveedor]) VALUES ( &#39;V1&#39;, &#39;Alfombra&#39;, 1500, 0.5 ,&#39;C2&#39; , &#39;P1&#39;), ( &#39;V2&#39;, &#39;Killim&#39;, 699.50, 0.25, &#39;C3&#39;, &#39;P1&#39;), ( &#39;V3&#39;, &#39;Killim&#39;, 475, 0.10, &#39;C2&#39;, &#39;P3&#39;), ( &#39;V4&#39;, &#39;Alfombra&#39;, 1500, 0.5 ,&#39;C7&#39; , &#39;P1&#39;), ( &#39;V5&#39;, &#39;Alfombra&#39;, 5000, 0.30, &#39;C5&#39;, &#39;P1&#39;), ( &#39;V6&#39;, &#39;Killim&#39;, 250, 0.10, &#39;C9&#39;, &#39;P3&#39;) GO VentasId Producto Precio Descuento Cliente Proveedor V1 Alfombra 1500 0,5 C2 P1 V2 Killim 699,5 0,25 C3 P1 V3 Killim 475 0,1 C2 P3 V4 Alfombra 1500 0,5 C7 P1 V5 Alfombra 5000 0,3 C5 P1 V6 Killim 250 0,1 C9 P3 475 0,1 C2 P3 SELECT VentasId, Producto, Precio, Descuento, &#39;Precio_Final&#39; = Precio - Precio*Descuento, Cliente, Proveedor FROM Otra_Tabla_Ventas VentasId Producto Precio Descuento Precio_Final Cliente Proveedor V1 Alfombra 1500 0,5 750 C2 P1 V2 Killim 699,5 0,25 524,625 C3 P1 V3 Killim 475 0,1 427,5 C2 P3 V4 Alfombra 1500 0,5 750 C7 P1 V5 Alfombra 5000 0,3 3500 C5 P1 V6 Killim 250 0,1 225 C9 P3 "],["concatenar-strings-de-filas-distintas.html", "Chapter 16 Concatenar strings de filas distintas", " Chapter 16 Concatenar strings de filas distintas Primero volvemos a cargar la tabla clientes tal y como la teniamos en un inicio: IF OBJECT_ID(&#39;dbo.Clientes&#39;, &#39;U&#39;) IS NOT NULL DROP TABLE dbo.Clientes; GO -- Create the table in the specified schema CREATE TABLE dbo.Clientes ( ClienteId nvarchar(50) NOT NULL PRIMARY KEY, -- primary key column --&gt; impide repeticiones de valores en esta columna Nombre char (50) NOT NULL, Pais nvarchar(50) NOT NULL, Ciudad nvarchar(50) NOT NULL, Email nvarchar (50) NOT NULL, Telefono nvarchar (50) NOT NULL ); GO INSERT INTO dbo.Clientes ([ClienteId], [Nombre], [Pais], [Ciudad], [Email], [Telefono]) VALUES ( &#39;C1&#39;, N&#39;Orlando&#39;, N&#39;Australia&#39;, N&#39;&#39;, N&#39;&#39; , N&#39;917755028&#39;), ( &#39;C2&#39;, N&#39;Keith&#39;, N&#39;India&#39;, N&#39;&#39;, N&#39;keith0@adventure-works.com&#39;, N&#39;&#39;), ( &#39;C3&#39;, N&#39;Donna&#39;, N&#39;Germany&#39;, N&#39;Berlin&#39;, N&#39;donna0@adventure-works.com&#39;, N&#39;915547890&#39;), ( &#39;C4&#39;, N&#39;Janet&#39;, N&#39;United States&#39;, N&#39;California&#39;, N&#39;janet1@adventure-works.com&#39;, N&#39;&#39;), ( &#39;C5&#39;, N&#39;Fabio&#39;, N&#39;España&#39;, N&#39;Madrid&#39;, N&#39;fabio10@gmail.com&#39;, N&#39;&#39;), ( &#39;C6&#39;, N&#39;Juan&#39;, N&#39;España&#39;, N&#39;Sevilla&#39;, N&#39;&#39; , N&#39;915869028&#39;), ( &#39;C7&#39;, N&#39;Lucia&#39;, N&#39;España&#39;, N&#39;&#39;, N&#39;LuciaPerez@hotmail.com&#39;, N&#39;&#39;), ( &#39;C8&#39;, N&#39;Pedro&#39;, N&#39;Italia&#39;, N&#39;Roma&#39;, N&#39;Pedro99@gmail.com&#39;, N&#39;910007890&#39;), ( &#39;C9&#39;, N&#39;Sergio&#39;, N&#39;United States&#39;, N&#39;New York&#39;, N&#39;sergio_as@gmail.com&#39;, N&#39;&#39;), ( &#39;C10&#39;, N&#39;Grecia&#39;, N&#39;Peru&#39;, N&#39;Lima&#39;, N&#39;Grecia89@gmail.com&#39;, N&#39;&#39;) GO SELECT Nombre, &#39;nueva_columna&#39; = Pais + &#39; - &#39; + Ciudad FROM Clientes Nombre nueva_columna Orlando Australia - Grecia Peru - Lima Keith India - Donna Germany - Berlin Janet United States - California Fabio España - Madrid Juan España - Sevilla Lucia España - Pedro Italia - Roma Sergio United States - New York "],["ordenar-tabla-por-columnas.html", "Chapter 17 Ordenar tabla por columnas", " Chapter 17 Ordenar tabla por columnas SELECT*FROM Ventas ORDER BY Precio ASC VentasId Producto Precio Descuento Cliente Proveedor V3 Killim 475 0,1 C2 P3 V2 Killim 699,5 0,25 C3 P1 V1 Alfombra 1500 0,5 C2 P1 SELECT*FROM Ventas ORDER BY Precio DESC VentasId Producto Precio Descuento Cliente Proveedor V1 Alfombra 1500 0,5 C2 P1 V2 Killim 699,5 0,25 C3 P1 V3 Killim 475 0,1 C2 P3 "],["seleccionar-filas-por-strings-con-like-y-not-like.html", "Chapter 18 Seleccionar filas por strings con Like y Not Like", " Chapter 18 Seleccionar filas por strings con Like y Not Like SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%lan%&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%i%&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C2 Keith India keith0@adventure-works.com C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre not like &#39;%i%&#39; ; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C3 Donna Germany Berlin donna0@adventure-works.com 915547890 C4 Janet United States California janet1@adventure-works.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;o%&#39; ; -- empieza por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%o&#39; ; -- acaba por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%lan%o&#39; ; -- contiene &#39;lan&#39; y acaba por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C1 Orlando Australia 917755028 SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%b%o&#39; ; -- contiene &#39;b&#39; y acaba por &#39;o&#39; ClienteId Nombre Pais Ciudad Email Telefono C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%F____&#39; ; -- empieza por &#39;F&#39; seguida de 4 caracteres ClienteId Nombre Pais Ciudad Email Telefono C5 Fabio España Madrid fabio@gmail.com SELECT * FROM dbo.Clientes WHERE Nombre like &#39;%F__&#39; ; -- empieza por &#39;F&#39; seguida de 2 caracteres ClienteId Nombre Pais Ciudad Email Telefono "],["count.html", "Chapter 19 Count", " Chapter 19 Count SELECT COUNT(*) FROM Clientes ; (No column name) 5 SELECT COUNT(Nombre) FROM Clientes ; (No column name) 5 "],["min-max-sum-avg.html", "Chapter 20 Min, Max, Sum, Avg", " Chapter 20 Min, Max, Sum, Avg SELECT Min(Precio) FROM Ventas ; (No column name) 475 SELECT Max(Precio) FROM Ventas ; (No column name) 1500 SELECT Sum(Precio) FROM Ventas ; (No column name) 2674,5 SELECT Avg(Precio) FROM Ventas ; (No column name) 891,5 "],["group-by.html", "Chapter 21 Group by", " Chapter 21 Group by "],["having.html", "Chapter 22 Having", " Chapter 22 Having "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
